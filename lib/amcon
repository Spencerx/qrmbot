#!/usr/bin/perl

# amrron status for qrmbot and lulz
# written by aa4jq

use strict;
use warnings;

use File::Basename;
use Cwd 'realpath';
use lib dirname(realpath(__FILE__));
use Colors;
use Util;

use URI::Escape;

my $username = $ENV{'USER'} || $ENV{'USERNAME'} || getpwuid($<);

our $scrapingant_key=undef;
my $scrapingantfile = $ENV{'HOME'} . "/.qrmbot/keys/scrapingantkey";
if (-e ($scrapingantfile)) {
  require($scrapingantfile);
}

if (defined $ARGV[0] and $ARGV[0] =~ /about/i){
  print "Returns current AmCON status from the AmRRON page.\n";
  exit 0;
}

my $ua = "Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0";

#my $url = "https://amrron.com/current-amccon-level/"; # defunct
my $url = "https://amrron.com/net-resourcestools/amcon-amrron-communications-condition-level/";
my $origurl = $url;
# archive.org snapshots for testing
#$url = "https://web.archive.org/web/20210113160531/" . $url; # level 2
#$url = "https://web.archive.org/web/20201116072537/" . $url; # level 3
#$url = "https://web.archive.org/web/20211204203353/" . $url; # level 4
#$url = "https://web.archive.org/web/20191223033133/" . $url; # level 5
my $found = 0;
if (defined $scrapingant_key) {
  $url = "https://api.scrapingant.com/v2/general?url=". uri_escape($url) . "&x-api-key=${scrapingant_key}&browser=false";
}
open(HTTP, '-|', "curl -A '$ua' --max-time 10 -s -L --insecure '$url' | grep fetchpriority | head -1");
binmode(HTTP, ":utf8");
while ( my $line = <HTTP>) {
  #print $line;
  chomp $line;
  my $img = $1 if $line =~ m|.*/(.*?)"|s;
  #print "$img\n";
  if ($img =~ m/AmCON-5/i) {
    print green("AmRRON Communications Condition Level: 5");
    print " -- " if $username eq getEggdropUID();
    print "\n" if $username ne getEggdropUID();
    print "No Incident (no known or anticipated threat to communications)\n";
    $found = 1;
  } elsif ($img =~ m/AmCON-4/i) {
    print lightgreen("AmRRON Communications Condition Level: 4");
    print " -- " if $username eq getEggdropUID();
    print "\n" if $username ne getEggdropUID();
    print "Incident Possible (Possible near-future interruption of conventional comms)\n";
    $found = 1;
  } elsif ($img =~ m/Amcon-3/i) {
    print yellow("AmRRON Communications Condition Level: 3");
    print " -- " if $username eq getEggdropUID();
    print "\n" if $username ne getEggdropUID();
    print "Incident Probable (Increased probability of interruption of conventional comms; not imminent)\n";
    $found = 1;
  } elsif ($img =~ m/AmCON-2/i) {
    print darkRed("AmRRON Communications Condition Level: 2");
    print " -- " if $username eq getEggdropUID();
    print "\n" if $username ne getEggdropUID();
    print "Incident IMMINENT (Disruption of communications expected or highly likely)\n";
    $found = 1;
  } elsif ($img =~ m/AmCON-1/i) {
    print red("AmRRON Communications Condition Level: 1");
    print " -- " if $username eq getEggdropUID();
    print "\n" if $username ne getEggdropUID();
    print "ACTIVE INCIDENT (Conduct AmRRON Nets according to the Emergency Net Schedule. Make adjustments based on the situation.)\n";
    $found = 1;
  } else {
    print "unknown AmRRON Communications Condition Level; $origurl\n";
    exit 0;
  }
}
close(HTTP);

if (not $found) {
    print "unable to retrieve AmRRON Communications Condition Level; $origurl\n";
    exit 0;
}

exit 0;
