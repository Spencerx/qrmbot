#!/usr/bin/perl
# check LoTW queue status
#
# 2-clause BSD license.
# Copyright (c) 2022 molo1134@github. All rights reserved.

use strict;
use utf8;
use feature 'unicode_strings';
binmode(STDOUT, ":utf8");

use File::Basename;
use Cwd 'realpath';
use lib dirname(realpath(__FILE__));
use Colors;

use JSON qw( decode_json );

my $username = $ENV{'USER'} || $ENV{'USERNAME'} || getpwuid($<);

my $delay = undef;
my $epoch = undef;
my $uptime = undef;
my $isup = undef;

my $url = "https://status.lotw.arrl.org/api/getMonitorList/GMOlwIV5k?page=1";
open (HTTP, '-|', "curl --max-time 10 -L -k -s $url");
binmode(HTTP, ":utf8");
local $/;   # read entire file -- FIXME: potentially memory hungry
my $json = <HTTP>;
close HTTP;
my $j = decode_json($json);
$isup = $j->{statistics}->{counts}->{down} == 0;
$uptime = $j->{statistics}->{uptime}->{l1}->{ratio};
print "LoTW up? ",$isup?green("yes"):red("no"), "; up ";
print (($uptime < 100.0)?red($uptime):green($uptime));
print "% of last 24h;";

$url = "http://www.arrl.org/logbook-queue-status";
open (HTTP, '-|', "curl --max-time 10 -L -k -s $url");
binmode(HTTP, ":utf8");
while (<HTTP>) {
  chomp;
  if (not defined $epoch and
	m|<TD class='_left'>([0-9: -]+)</TD>|) {
    $epoch = $1;
  }
  if (not defined $delay and
	m|<TD class='_right'>[0-9: -]+<br />\(([0-9a-z ]+) ago\)</TD>|) {
    $delay = $1;
  }
}
close HTTP;
if (defined $epoch and defined $delay) {
  print " Queue Delay as of $epoch UTC: ", bold($delay), "\n";
} else {
  print " Queue Delay ", yellow("undetermined"), "\n";
}
exit 0;
